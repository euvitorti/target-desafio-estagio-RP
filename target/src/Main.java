import desafioContarLetra.ContarLetra;
import desafioFibonacci.Fibonacci;
import desafioSoma.Soma;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {

    private static Scanner scanner = new Scanner(System.in);

    // Mensagens e op√ß√µes usadas em m√∫ltiplos lugares
    private static final String MENU_PRINCIPAL = """
        \n-----------------------------
        üë©‚Äçüíª     Target Sistemas     üë®‚Äçüíª
        -----------------------------
        1. Desafio Soma
        2. Desafio Fibonacci
        3. Desafio Contar Letra 'A'
        4. Sair
        """;

    private static final String MENU_SOMA = """
        \n------------
        Desafio Soma
        ------------
        1. Somar Numero Padr√£o do Caso
        2. Escolher Somar N√∫mero
        """;

    private static final String OPCAO_INVALIDA = "Op√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida.";

    private static int lerOpcao(String menu) {
        int opcao = 0;
        boolean inputValido = false;

        // Exibe o menu e l√™ a op√ß√£o escolhida pelo usu√°rio
        System.out.println(menu);
        while (!inputValido) {
            try {
                System.out.print("Escolha uma op√ß√£o: ");
                opcao = scanner.nextInt();
                scanner.nextLine(); // Consumir a nova linha deixada pelo nextInt()

                if (opcao > 0) {
                    inputValido = true; // Se a op√ß√£o for v√°lida, sai do loop
                } else {
                    System.out.println(OPCAO_INVALIDA);
                }
            } catch (InputMismatchException e) {
                System.out.println("Entrada inv√°lida. Por favor, insira um n√∫mero v√°lido.");
                scanner.next(); // Limpar o buffer para evitar loop infinito
            }
        }

        return opcao;
    }

    private static void somar() {
        int opcao = lerOpcao(MENU_SOMA);
        Soma soma = new Soma(); // Cria uma inst√¢ncia da classe Soma
        int resultado;

        switch (opcao) {
            case 1:
                resultado = soma.somarNumeroPadrao(); // Soma os n√∫meros padr√£o
                System.out.printf("Valor da soma com n√∫mero padr√£o: %d.\n", resultado);
                break;
            case 2:
                try {
                    System.out.print("Informe um n√∫mero para somar: ");
                    int numero = scanner.nextInt(); // L√™ o n√∫mero informado pelo usu√°rio
                    resultado = soma.escolherSomarNumero(numero); // Soma o n√∫mero informado
                    System.out.printf("Valor da soma com n√∫mero informado: %d.\n", resultado);
                } catch (InputMismatchException e) {
                    System.out.println("Entrada inv√°lida. Somente n√∫meros inteiros s√£o permitidos.");
                    scanner.next(); // Limpar o buffer para evitar problemas
                }
                break;
            default:
                System.out.println(OPCAO_INVALIDA);
                break;
        }
    }

    private static void verificarNumeroFibonacci() {
        System.out.println("""
        \n---------------
        Desafio Fibonacci
        -----------------
        """);

        boolean inputValido = false; // Vari√°vel para controlar se a entrada √© v√°lida
        int numero = 0;

        while (!inputValido) {
            try {
                System.out.print("Informe um n√∫mero: ");
                numero = scanner.nextInt(); // L√™ o n√∫mero informado pelo usu√°rio
                inputValido = true; // Marca a entrada como v√°lida se n√£o houver exce√ß√£o
            } catch (InputMismatchException e) {
                System.out.println("Entrada inv√°lida. Por favor, insira um n√∫mero inteiro.");
                scanner.next(); // Limpa o buffer do scanner para evitar loop infinito
            }
        }

        Fibonacci fibonacci = new Fibonacci(); // Cria uma inst√¢ncia da classe Fibonacci
        fibonacci.verificarNumeroFibonacci(numero); // Verifica se o n√∫mero faz parte da sequ√™ncia de Fibonacci
    }

    private static void contarLetra() {
        System.out.println("""
        \n-----------------------------
        Desafio Contar Letra "A"
        -----------------------------
        """);

        System.out.print("Informe uma palavra ou um texto, como por exemplo: (J√° sabemos quem vamos contratar!) üòä: ");
        String str = scanner.nextLine(); // L√™ a string informada pelo usu√°rio

        int resultado = ContarLetra.verificarFrase(str); // Chama o m√©todo para contar a letra 'a'

        // Exibe o resultado
        if (resultado > 0) {
            System.out.printf("A letra 'a' ou 'A' aparece %d vezes na string.\n", resultado);
        } else {
            System.out.println("A letra 'a' ou 'A' n√£o aparece na string.");
        }
    }

    public static void main(String[] args) {
        boolean continuar = true; // Controle para manter o loop do menu ativo

        // Loop do menu principal
        while (continuar) {
            int opcao = lerOpcao(MENU_PRINCIPAL);

            switch (opcao) {
                case 1:
                    somar(); // Chama o m√©todo de soma
                    break;
                case 2:
                    verificarNumeroFibonacci(); // Chama o m√©todo de verifica√ß√£o Fibonacci
                    break;
                case 3:
                    contarLetra(); // Chama o m√©todo de contagem de letras
                    break;
                case 4:
                    continuar = false; // Sinaliza para sair do loop e encerrar o programa
                    System.out.println("""
                            
                            #QueroSerTargetiano üë®‚Äçüíª
                            
                            Antes de ir... Acesse o meu portf√≥lio: https://meuportfolio-euvitortis-projects.vercel.app/
                            
                            Saindo... Obrigado por usar o programa. üëã
                            """);
                    break;
                default:
                    System.out.println(OPCAO_INVALIDA);
                    break;
            }
        }

        scanner.close(); // Fecha o scanner para liberar recursos
    }
}
